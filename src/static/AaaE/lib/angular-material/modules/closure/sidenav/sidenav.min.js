/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v1.0.7-master-317c1c8
 */
function SidenavService(e,n,o,i){function t(o){var t=e.get(o);return t?t:void i.error(n.supplant(d,[o||""]))}function r(n){return e.when(n)}var d="SideNav '{0}' is not available! Did you use md-component-id='{0}'?",a={find:t,waitFor:r};return function(e,n){if(angular.isUndefined(e))return a;var o=a.find(e);return o||n!==!0?o:a.waitFor(e)}}function SidenavFocusDirective(){return{restrict:"A",require:"^mdSidenav",link:function(e,n,o,i){}}}function SidenavDirective(e,n,o,i,t,r,d,a,c,s){function l(r,l,u,m){function v(e,n){r.isLockedOpen=e,e===n?l.toggleClass("_md-locked-open",!!e):t[e?"addClass":"removeClass"](l,"_md-locked-open"),C&&C.toggleClass("_md-locked-open",!!e)}function p(e){var o=n.findFocusTarget(l)||n.findFocusTarget(l,"[md-sidenav-focus]")||l,i=l.parent();return i[e?"on":"off"]("keydown",$),C&&C[e?"on":"off"]("click",S),e&&(k=s[0].activeElement),f(e),w=c.all([e&&C?t.enter(C,i):C?t.leave(C):c.when(!0),t[e?"removeClass":"addClass"](l,"_md-closed")]).then(function(){r.isOpen&&o&&o.focus()})}function f(e){var n=l.parent();e&&!O?(O=n.css("overflow"),n.css("overflow","hidden")):angular.isDefined(O)&&(n.css("overflow",O),O=void 0)}function g(e){return r.isOpen==e?c.when(!0):c(function(o){r.isOpen=e,n.nextTick(function(){w.then(function(e){r.isOpen||(k&&k.focus(),k=null),o(e)})})})}function $(e){var n=e.keyCode===o.KEY_CODE.ESCAPE;return n?S(e):c.when(!0)}function S(e){return e.preventDefault(),m.close()}var O,C,k=null,w=c.when(!0),h=d(u.mdIsLockedOpen),D=function(){return h(r.$parent,{$media:function(n){return a.warn("$media is deprecated for is-locked-open. Use $mdMedia instead."),e(n)},$mdMedia:e})};angular.isDefined(u.mdDisableBackdrop)||(C=n.createBackdrop(r,"_md-sidenav-backdrop md-opaque ng-enter")),l.addClass("_md"),i(l),C&&i.inherit(C,l),l.on("$destroy",function(){C&&C.remove(),m.destroy()}),r.$on("$destroy",function(){C&&C.remove()}),r.$watch(D,v),r.$watch("isOpen",p),m.$toggleOpen=g}return{restrict:"E",scope:{isOpen:"=?mdIsOpen"},controller:"$mdSidenavController",compile:function(e){return e.addClass("_md-closed"),e.attr("tabIndex","-1"),l}}}function SidenavController(e,n,o,i,t){var r=this;r.isOpen=function(){return!!e.isOpen},r.isLockedOpen=function(){return!!e.isLockedOpen},r.open=function(){return r.$toggleOpen(!0)},r.close=function(){return r.$toggleOpen(!1)},r.toggle=function(){return r.$toggleOpen(!e.isOpen)},r.$toggleOpen=function(n){return t.when(e.isOpen=n)},r.destroy=i.register(r,o.mdComponentId)}goog.provide("ng.material.components.sidenav"),goog.require("ng.material.components.backdrop"),goog.require("ng.material.core"),angular.module("material.components.sidenav",["material.core","material.components.backdrop"]).factory("$mdSidenav",SidenavService).directive("mdSidenav",SidenavDirective).directive("mdSidenavFocus",SidenavFocusDirective).controller("$mdSidenavController",SidenavController),SidenavService.$inject=["$mdComponentRegistry","$mdUtil","$q","$log"],SidenavDirective.$inject=["$mdMedia","$mdUtil","$mdConstant","$mdTheming","$animate","$compile","$parse","$log","$q","$document"],SidenavController.$inject=["$scope","$element","$attrs","$mdComponentRegistry","$q"],ng.material.components.sidenav=angular.module("material.components.sidenav");